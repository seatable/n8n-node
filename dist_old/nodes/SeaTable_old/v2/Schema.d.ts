import type { TColumnType, TDateTimeFormat, TInheritColumnKey } from './types';
export declare type ColumnType = keyof typeof schema.columnTypes;
export declare const schema: {
    rowFetchSegmentLimit: number;
    dateTimeFormat: TDateTimeFormat;
    internalNames: {
        _id: TColumnType;
        _creator: TColumnType;
        _ctime: TColumnType;
        _last_modifier: TColumnType;
        _mtime: TColumnType;
        _seq: TColumnType;
        _archived: TColumnType;
        _locked: TColumnType;
        _locked_by: TColumnType;
    };
    columnTypes: {
        number: string;
        text: string;
        "long-text": string;
        collaborator: string;
        date: string;
        duration: string;
        "single-select": string;
        "multiple-select": string;
        image: string;
        file: string;
        email: string;
        url: string;
        checkbox: string;
        rate: string;
        formula: string;
        "link-formula": string;
        geolocation: string;
        link: string;
        creator: string;
        ctime: string;
        "last-modifier": string;
        mtime: string;
        "auto-number": string;
        button: string;
        "digital-sign": string;
    };
    nonUpdateAbleColumnTypes: {
        number: TColumnType;
        text: TColumnType;
        "long-text": TColumnType;
        collaborator: TColumnType;
        date: TColumnType;
        duration: TColumnType;
        "single-select": TColumnType;
        "multiple-select": TColumnType;
        image: TColumnType;
        file: TColumnType;
        email: TColumnType;
        url: TColumnType;
        checkbox: TColumnType;
        rate: TColumnType;
        formula: TColumnType;
        "link-formula": TColumnType;
        geolocation: TColumnType;
        link: TColumnType;
        creator: TColumnType;
        ctime: TColumnType;
        "last-modifier": TColumnType;
        mtime: TColumnType;
        "auto-number": TColumnType;
        button: TColumnType;
        "digital-sign": TColumnType;
    };
};
